---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MaDDo.
--- DateTime: 31-Jul-19 4:55 PM
---
function gadget:GetInfo()
    return {
        name 	= "Unit Upgrade - Dgun",
        desc	= "Enables D-gun command for Commanders",
        author	= "MaDDoX",
        date	= "Sept 24th 2019",
        license	= "GNU GPL, v2 or later",
        layer	= -1,
        enabled = true,
    }
end

VFS.Include("gamedata/taptools.lua")

local spGetUnitDefID        = Spring.GetUnitDefID
local spGetUnitTeam         = Spring.GetUnitTeam
local spFindUnitCmdDesc     = Spring.FindUnitCmdDesc
local spGetUnitCmdDescs     = Spring.GetUnitCmdDescs
local spInsertUnitCmdDesc   = Spring.InsertUnitCmdDesc
local spEditUnitCmdDesc     = Spring.EditUnitCmdDesc
local spSetUnitRulesParam   = Spring.SetUnitRulesParam
local spMarkerAddPoint      = Spring.MarkerAddPoint
local spMarkerErasePosition = Spring.MarkerErasePosition
local spGetGameFrame        = Spring.GetGameFrame
local spUseUnitResource     = Spring.UseUnitResource
local spGetUnitPosition     = Spring.GetUnitPosition

local RedStr = "\255\255\001\001"


-- Per-unit upgrade settings (TODO: Move to a separate file for better organization)

CMD.UPG_DGUN = 41999
CMD_UPG_DGUN = 41999
PUU = {
    dgun = {
        UpgradeCmdDesc = {
        id      = CMD_UPG_DGUN,
        name    = 'Upg D-Gun',
        action  = 'dgunupgrade',
        cursor  = 'Morph',
        type    = CMDTYPE.ICON,
        tooltip = UpgradeTooltip,
        },
        Prereq = "Tech1",
        UpgradeTooltip = 'Enables D-gun weapon',
    },
}
LocalUpgradeUnits = {
    [UnitDefNames["corcom2"].id] = "dgun",
    [UnitDefNames["corcom3"].id] = "dgun",
    [UnitDefNames["corcom4"].id] = "dgun",
    [UnitDefNames["armcom2"].id] = "dgun",
    [UnitDefNames["armcom3"].id] = "dgun",
    [UnitDefNames["armcom4"].id] = "dgun",
}


local Prereq = "Tech1"
--local tooltipRequirement = "\n"..RedStr.."Requires ".. Prereq,
local UpgradeTooltip = 'Enables D-gun ability / command'
local tooltipRequirement = "\n"..RedStr.."Requires ".. Prereq
local upgradingUnits = {}
local upgradedUnits = {}

if not gadgetHandler:IsSyncedCode() then
    return end

local function editCommand (unitID, CMDID, options)
    local cmdDescID = spFindUnitCmdDesc(unitID, CMDID)
    if not cmdDescID or not options then --or not options.defCmdDesc then
        return end

    if options.req and options.defCmdDesc then
        local append = ""
        if options.req == "perunit" then
            if not upgradedUnits[unitID] then
                append = "\n\n"..RedStr.."Requires: "..options.defCmdDesc.name.." unit upgrade."
                --append = options.missingPrereqTooltip
            end
        else
            if not options.req == "" and not GG.TechCheck(options.req, spGetUnitTeam(unitID)) then
                append = "\n\n"..RedStr.."Requires Tech: "..options.req
            end
        end
        options.tooltip = ((options.tooltip == nil) and options.defCmdDesc.tooltip or options.tooltip) .. append
    end

    local currentCmdDesc = spGetUnitCmdDescs(unitID, cmdDescID, cmdDescID)[1]

    currentCmdDesc.tooltip = options.tooltip and options.tooltip or currentCmdDesc.tooltip
    currentCmdDesc.hidden = (options.hidden == nil) and currentCmdDesc.hidden or options.hidden
    currentCmdDesc.disabled = (options.disabled == nil) and currentCmdDesc.disabled or options.disabled

    spEditUnitCmdDesc (unitID, cmdDescID, currentCmdDesc)
    --Spring.Echo(tostringplus(currentCmdDesc))

    -- getUpgradeTooltip(spGetUnitTeam(unitID))
    -- Spring.Echo("New tooltip: "..newCmdDesc.tooltip.." disabled: "..tostring(disabled))

end

-- TODO: Add manualfire edited tooltip
local function addUpdateCommand(unitID, insertID, cmd, options)
    local cmdDescId = spFindUnitCmdDesc(unitID, cmd.id)
    if not cmdDescId then
        spInsertUnitCmdDesc(unitID, insertID, cmd)
    else
        spEditUnitCmdDesc(unitID, cmdDescId, cmd)
    end
    if options then
        editCommand (unitID, cmd.id, options)
    end
end

function gadget:UnitCreated(unitID, unitDefID, unitTeam)
    if ADVCOMMANDER[unitDefID] then
        return end
    --Spring.Echo("created: "..unitID)
    if UnitDefs[spGetUnitDefID(unitID)].customParams.iscommander then
        addUpdateCommand(unitID, CMD_UPG_DGUN, UpgradeCmdDesc, { req="Tech1", defCmdDesc=UpgradeCmdDesc})
    end
end

